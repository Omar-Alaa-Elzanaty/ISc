					DataBase Schema

Account(firstname,middlename,lastname,NationalID,birthdate,grade,college,JoinDate,Gender,
lastseen,profilephoto,codeforceHandle,facebooklink,vjudgeHandle)
uniqe:NationalID,vjudge,codeforceHandle,facebooklink,email
null: facebooklink,VjudgeHandle

Trainees(id,Totalsolvedproblems,lastSubmission,campid,userid,mentorid) //all submition in last two days
uniqe:
null:campid,mentorid
PK:id


Instructor(id,UserId,

Mentor(id,userid)
uniqe:userid
notnull:userid
PK:id

Camps(id,name,year,term,durationinweeks)
uniqe:name
notnull:name,year,term,duration
PK:id

Sessions(id,Topic,instructorname,date,locationname,locationLink,campid)
uniqu:topic
notnull: Topic,instructorname,date,campid
PK:id

SessionsFeedback(sessionid,traineeid,feedback,datetime)
unique:
notnull:feedback,datetime
PK:sessionid,traineeid
feedback max(500)


MentorsOfCamp(mentorid,campid)
uniqu:(mentorid,campid)
notnull:mentorid,campid
PK:mentorid,campid

TraineesAttendence(traineeid,sessionid)
unique:(traineeid,sessionid)
notnull:traineeid,sessionid
PK:traineeid,sessionid

MentorsAttendence(mentorid,sessionid)
unique:(mentorid,sessionid)
notnull:mentorid,sessionid
PK:(mentorid,sessionid)

Sheets(id,name,numberofproblems,ProblemSheetLink)
unique:name
notnull:name,numberofproblems
PK:id

TraineesSheetsAccess(traineeid,sheetid,numberofproblems)
unique:(trineeid,sessionid)
notnull:trineeid,sessionid
numberofproblems->default(0)
PK:(trineeid,sessionid)

Materials(id,name,link,sheetid)
unique:name,link,sheetid
notnull:name,link,sheetid
PK:id

TraineesArchive(firstname,middlename,lastname,NationalID,birthdate,grade,college,Gender,
codeforceHandle,facebooklink,vjudgeHandle,email,CampName,phonenumber,iscompleted)
unique:NationalID,vjudge,codeforceHandle,facebooklink,email
null: facebooklink,vjudge,phonenumber
PK:NationalID

StuffArchive(firstname,middlename,lastname,NationalID,birthdate,grade,college,Gender,
codeforceHandle,facebooklink,vjudgeHandle,email,phonenumber)
unique:NationalID,vjudge,codeforceHandle,facebooklink
null:facebooklink,phonenumber,vjudgeHandle,campname
PK:NationalID

NewRegister(firstname,middlename,lastname,NationalID,birthdate,grade,college,Gender,phonenumber
codeforceHandle,facebooklink,email,profilepicture,status)
unique:NationalID,codeforcesHandle
null:phonenumber,status
PK:NationalID



OnDelete:
Trainee - camps Cascade -->should delect the account
Trainee - Mentor Restrict -->should assign trainee to another mentor/edit on migration file not fluentapi
Trainee - sheets Cascade/Restrict sheetid (TraineeSheetAccess) 
Trainee - Session /Restrict sessionid (sessionfeedback)/same in (traineeAttendnces) (SessionFeedback) (TraineeAttendence)
Camps - Mentor /Restrict  campid(Mentorofcamp)
Camps - Sessions Cascade
Session - Mentor /Restrict sessionid mentorAttendence/ 
Sheets - Materials Cascade
camps - HeadOfTraining setnull at headoftraining

trainee.include(i=>i.mentorid).include(j=>j.account).where(t=>t.id=id);
[resutl.mentor.account.firstname+result.mentor.account.lastname]

[Main tables]
Mentor
camp
trainee
sheet
material
session
stuffArchive
traineeArchive
NewRegisteration
-------------------------
Database Testing:

------------------------


